{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/GAMMA TECH/to-do-app-react/src/components/ToDo/ToDo.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from \"react\";\nimport { NoteContext } from \"../../context/NoteContext\";\nimport './ToDo.css';\nimport calendar from '../assets/calendar.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDo = _ref => {\n  _s();\n  let {\n    id,\n    task,\n    complete,\n    date,\n    currentDate,\n    setCurrentDate,\n    relevance,\n    tag\n  } = _ref;\n  const {\n    setStatusTask\n  } = useContext(NoteContext);\n  const [isEditing, setIsEditing] = useState(false);\n  const checkTask = e => setStatusTask(id, e.target.checked);\n  const handleUpdateDate = () => {\n    setCurrentDate(new Date());\n    setIsEditing(false);\n  };\n  const formattedDate = currentDate.toLocaleString('es-ES', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric'\n  });\n  let dotColor;\n  switch (relevance) {\n    case '1':\n      dotColor = '#D8A2FF';\n      break;\n    case '2':\n      dotColor = '#A8FFD9';\n      break;\n    case '3':\n      dotColor = '#E7008F';\n      break;\n    default:\n      dotColor = 'black';\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conteiner-list\",\n    style: {\n      backgroundColor: dotColor\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-info\",\n      style: {\n        backgroundColor: 'transparent'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"check-name\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onChange: checkTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: complete ? 'task-done' : '',\n          children: task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"tag-task\",\n        children: tag && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u2728\", tag, \"\\u2728\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box-date\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-box\",\n          id: \"datetime\",\n          children: [\" \", isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"datetime-local\",\n            value: currentDate.toISOString().slice(0, -8),\n            onChange: e => setCurrentDate(new Date(e.target.value)),\n            onBlur: () => setIsEditing(false),\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"transparent\",\n            id: \"line\",\n            onClick: () => setIsEditing(true),\n            children: formattedDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            paddingTop: '25px'\n          },\n          className: \"calendar-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: calendar,\n            alt: \"calendar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"transparent\",\n            children: date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(ToDo, \"b6PDm5I/nWiRFQXBv86W/bdLD7w=\");\n_c = ToDo;\nexport default ToDo;\nvar _c;\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"names":["useContext","useState","NoteContext","calendar","ToDo","id","task","complete","date","currentDate","setCurrentDate","relevance","tag","setStatusTask","isEditing","setIsEditing","checkTask","e","target","checked","handleUpdateDate","Date","formattedDate","toLocaleString","year","month","day","hour","minute","second","dotColor","backgroundColor","toISOString","slice","value","paddingTop"],"sources":["/Users/user/Desktop/GAMMA TECH/to-do-app-react/src/components/ToDo/ToDo.jsx"],"sourcesContent":["import { useContext, useState } from \"react\";\nimport { NoteContext } from \"../../context/NoteContext\";\nimport './ToDo.css'\nimport calendar from '../assets/calendar.png'\n\n\nconst ToDo = ({ id, task, complete, date, currentDate, setCurrentDate, relevance, tag }) => {\n\n    const { setStatusTask } = useContext(NoteContext)\n    const [isEditing, setIsEditing] = useState(false);\n\n    const checkTask = e => setStatusTask(id, e.target.checked)\n\n    const handleUpdateDate = () => {\n        setCurrentDate(new Date());\n        setIsEditing(false);\n    }\n\n    const formattedDate = currentDate.toLocaleString('es-ES', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric',\n        second: 'numeric'\n    });\n\n    let dotColor;\n\n    switch (relevance) {\n        case '1':\n            dotColor = '#D8A2FF';\n            break;\n        case '2':\n            dotColor = '#A8FFD9';\n            break;\n        case '3':\n            dotColor = '#E7008F';\n            break;\n        default:\n            dotColor = 'black';\n    }\n\n\n\n\n\n    return (\n        <div className=\"conteiner-list\" style={{ backgroundColor: dotColor }}>\n            <div className=\"card-info\" style={{ backgroundColor: 'transparent' }}>\n                <div id=\"check-name\">\n                    <input type=\"checkbox\" onChange={checkTask} />\n                    <h3 className={complete ? 'task-done' : ''}>{task}</h3>\n                </div>\n\n                <div id=\"tag-task\">\n                    {tag && <p>✨{tag}✨</p>}\n                </div>\n\n\n\n                <div className=\"box-date\">\n\n                    <div className=\"calendar-box\" id=\"datetime\"> {isEditing ? (\n                        <input type=\"datetime-local\"\n                            value={currentDate.toISOString().slice(0, -8)}\n                            onChange={(e) => setCurrentDate(new Date(e.target.value))}\n                            onBlur={() => setIsEditing(false)}\n                            autoFocus />) : (\n\n                        <p className=\"transparent\" id=\"line\" onClick={() => setIsEditing(true)}>{formattedDate}</p>\n                    )}\n                    </div>\n\n\n                    <div style={{ paddingTop: '25px' }} className=\"calendar-box\">\n                        <img src={calendar} alt='calendar' />\n                        <p className=\"transparent\">{date}</p>\n                    </div>\n\n                </div>\n            </div>\n\n\n        </div>\n    )\n}\n\n\nexport default ToDo"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}