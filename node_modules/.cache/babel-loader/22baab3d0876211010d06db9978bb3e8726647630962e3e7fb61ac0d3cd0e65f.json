{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/GAMMA TECH/to-do-app-react/src/components/Form/Form.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from \"react\";\nimport { NoteContext } from \"../../context/NoteContext\";\nimport './Form.css';\nimport titleImg from '../assets/black-todo.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const [task, setTask] = useState('');\n  const [date, setDate] = useState('');\n  const [tag, setTag] = useState('');\n  const {\n    addTask,\n    message,\n    setMessage\n  } = useContext(NoteContext);\n  const [relevance, setRelevance] = useState('');\n  const [sortDirection, setSortDirection] = useState('asc');\n  const [showAll, setShowAll] = useState(true);\n  const submitNote = e => {\n    e.preventDefault();\n    addTask(task, date, tag, relevance);\n    setTask('');\n    setDate('');\n    setTag('');\n    setRelevance('');\n  };\n  const handleSort = () => {\n    const newSortDirection = sortDirection === 'asc' ? 'desc' : 'asc';\n    setSortDirection(newSortDirection);\n    setMessage(sortNotes(message, newSortDirection));\n  };\n  const sortNotes = (notes, direction) => {\n    return [...notes].sort((a, b) => {\n      const aDate = new Date(a.date).getTime();\n      const bDate = new Date(b.date).getTime();\n      const compareResult = aDate - bDate;\n      return direction === 'asc' ? compareResult : -compareResult;\n    });\n  };\n  const sortedNotes = sortNotes(message, sortDirection);\n  const getUniqueRelevances = () => {\n    const relevances = message.map(note => note.relevance);\n    return [...new Set(relevances)];\n  };\n  const uniqueRelevances = getUniqueRelevances();\n  const showRelevanceButton = uniqueRelevances.length > 2;\n  const filterByRelevance = relevance => {\n    const filteredNotes = message.filter(note => note.relevance === relevance);\n    setMessage(filteredNotes);\n  };\n  const resetNotes = () => {\n    setMessage([...message]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"conteier-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"img-header\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: titleImg,\n        alt: \"title-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitNote,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"form-note\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input-note\",\n          value: task,\n          placeholder: \"Type something here....\",\n          onChange: e => setTask(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-input\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-input\",\n          type: \"button\",\n          onClick: handleSort,\n          children: [\"Sort by date \", sortDirection === 'asc' ? 'ascendente' : 'descendente']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"box-conteiners-form\",\n        children: [task && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"conteiner-tag\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: tag,\n            placeholder: \"#AddATag\",\n            onChange: e => setTag(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this), task && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"conteiner-relevance\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: relevance,\n            onChange: e => setRelevance(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Priority\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1\",\n              children: \"Low\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"2\",\n              children: \"Medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"3\",\n              children: \"High\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this), task && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"conteiner-date\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: date,\n            onChange: e => setDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), showRelevanceButton && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: uniqueRelevances.map(relevance => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-input\",\n          type: \"button\",\n          onClick: () => filterByRelevance(relevance),\n          children: `Relevance ${relevance}`\n        }, relevance, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this), showResetButton && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-input\",\n          type: \"button\",\n          onClick: resetNotes,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), sortedNotes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: note.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: note.task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }, this)]\n    }, note.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(Form, \"jRDmMXIlrGcAgeNh0QTskJk3W/M=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useContext","useState","NoteContext","titleImg","Form","task","setTask","date","setDate","tag","setTag","addTask","message","setMessage","relevance","setRelevance","sortDirection","setSortDirection","showAll","setShowAll","submitNote","e","preventDefault","handleSort","newSortDirection","sortNotes","notes","direction","sort","a","b","aDate","Date","getTime","bDate","compareResult","sortedNotes","getUniqueRelevances","relevances","map","note","Set","uniqueRelevances","showRelevanceButton","length","filterByRelevance","filteredNotes","filter","resetNotes","target","value","showResetButton","id"],"sources":["/Users/user/Desktop/GAMMA TECH/to-do-app-react/src/components/Form/Form.jsx"],"sourcesContent":["import { useContext, useState } from \"react\";\nimport { NoteContext } from \"../../context/NoteContext\";\nimport './Form.css'\nimport titleImg from '../assets/black-todo.jpeg'\n\n\n\n\nconst Form = () => {\n    const [task, setTask] = useState('')\n    const [date, setDate] = useState('')\n    const [tag, setTag] = useState('')\n    const { addTask, message, setMessage } = useContext(NoteContext)\n    const [relevance, setRelevance] = useState('')\n    const [sortDirection, setSortDirection] = useState('asc')\n    const [showAll, setShowAll] = useState(true)\n\n    const submitNote = (e) => {\n        e.preventDefault()\n        addTask(task, date, tag, relevance)\n        setTask('')\n        setDate('')\n        setTag('')\n        setRelevance('')\n    }\n\n    const handleSort = () => {\n        const newSortDirection = sortDirection === 'asc' ? 'desc' : 'asc';\n        setSortDirection(newSortDirection);\n        setMessage(sortNotes(message, newSortDirection));\n    }\n\n    const sortNotes = (notes, direction) => {\n        return [...notes].sort((a, b) => {\n            const aDate = new Date(a.date).getTime();\n            const bDate = new Date(b.date).getTime();\n            const compareResult = aDate - bDate;\n            return direction === 'asc' ? compareResult : -compareResult;\n        });\n    }\n\n    const sortedNotes = sortNotes(message, sortDirection);\n\n    const getUniqueRelevances = () => {\n        const relevances = message.map(note => note.relevance);\n        return [...new Set(relevances)];\n    };\n\n    const uniqueRelevances = getUniqueRelevances();\n    const showRelevanceButton = uniqueRelevances.length > 2;\n\n    const filterByRelevance = (relevance) => {\n        const filteredNotes = message.filter(note => note.relevance === relevance);\n        setMessage(filteredNotes);\n    };\n\n    const resetNotes = () => {\n        setMessage([...message]);\n    }\n\n\n    return (\n        <div id=\"conteier-form\">\n\n            <div id=\"img-header\">\n                <img src={titleImg} alt='title-img' />\n            </div>\n\n            <form onSubmit={submitNote}>\n                <div id=\"form-note\">\n                    <input\n                        type=\"text\"\n                        className=\"input-note\"\n                        value={task}\n                        placeholder=\"Type something here....\"\n                        onChange={e => setTask(e.target.value)}\n                        required />\n\n                    <button className=\"btn-input\">Add</button>\n\n                    <button className=\"btn-input\" type=\"button\" onClick={handleSort}>\n                        Sort by date {sortDirection === 'asc' ? 'ascendente' : 'descendente'}\n                    </button>\n                </div>\n\n                <div id=\"box-conteiners-form\">\n\n                    {task && (\n                        <div className=\"conteiner-tag\">\n                            <input type=\"text\" value={tag} placeholder=\"#AddATag\" onChange={e => setTag(e.target.value)} />\n                        </div>\n                    )}\n\n                    {task && (\n                        <div className=\"conteiner-relevance\">\n                            <select\n                                value={relevance}\n                                onChange={e => setRelevance(e.target.value)}>\n                                <option value=\"\">Priority</option>\n                                <option value=\"1\" >Low</option>\n                                <option value=\"2\">Medium</option>\n                                <option value=\"3\">High</option>\n                            </select>\n                        </div>\n                    )}\n\n                    {task && (\n                        <div className=\"conteiner-date\">\n                            <input type=\"date\" value={date} onChange={e => setDate(e.target.value)} />\n                        </div>\n                    )}\n                </div>\n\n                {showRelevanceButton && (\n                    <div>\n                        {uniqueRelevances.map(relevance => (\n                            <button\n                                key={relevance}\n                                className=\"btn-input\"\n                                type=\"button\"\n                                onClick={() => filterByRelevance(relevance)}\n                            >\n                                {`Relevance ${relevance}`}\n                            </button>\n                        ))}\n                    </div>\n                )}\n\n{showResetButton && (\n            <div>\n                <button\n                    className=\"btn-input\"\n                    type=\"button\"\n                    onClick={resetNotes}\n                >\n                    Reset\n                </button>\n            </div>\n        )}\n\n            </form>\n\n            {sortedNotes.map(note => (\n                <div key={note.id}>\n                    <span>{note.date}</span>\n                    <p>{note.task}</p>\n                </div>\n            ))}\n\n\n        </div>\n    )\n}\n\n\n\nexport default Form"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}