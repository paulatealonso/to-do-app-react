{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/GAMMA TECH/to-do-app-react/src/components/ToDo/ToDo.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from \"react\";\nimport { NoteContext } from \"../../context/NoteContext\";\nimport './ToDo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDo = _ref => {\n  _s();\n  let {\n    id,\n    task,\n    complete,\n    date,\n    currentDate,\n    setCurrentDate,\n    relevance\n  } = _ref;\n  const {\n    setStatusTask\n  } = useContext(NoteContext);\n  const checkTask = e => setStatusTask(id, e.target.checked);\n  const [isEditing, setIsEditing] = useState(false);\n  const handleUpdateDate = () => {\n    setCurrentDate(new Date());\n    setIsEditing(false);\n  };\n  const formattedDate = currentDate.toLocaleString('es-ES', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric'\n  });\n  let dotColor;\n  switch (relevance) {\n    case '1':\n      dotColor = 'red';\n      break;\n    case '2':\n      dotColor = 'orange';\n      break;\n    case '3':\n      dotColor = 'green';\n      break;\n    default:\n      dotColor = 'black';\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conteiner-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"check-name\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: checkTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: complete ? 'task-done' : '',\n        children: task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Fecha de creaci\\xF3n: \", isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          value: currentDate.toISOString().slice(0, -8),\n          onChange: e => setCurrentDate(new Date(e.target.value)),\n          onBlur: () => setIsEditing(false),\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => setIsEditing(true),\n          children: formattedDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dot\",\n      style: {\n        backgroundColor: dotColor\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(ToDo, \"b6PDm5I/nWiRFQXBv86W/bdLD7w=\");\n_c = ToDo;\nexport default ToDo;\nvar _c;\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"names":["useContext","useState","NoteContext","ToDo","id","task","complete","date","currentDate","setCurrentDate","relevance","setStatusTask","checkTask","e","target","checked","isEditing","setIsEditing","handleUpdateDate","Date","formattedDate","toLocaleString","year","month","day","hour","minute","second","dotColor","toISOString","slice","value","backgroundColor"],"sources":["/Users/user/Desktop/GAMMA TECH/to-do-app-react/src/components/ToDo/ToDo.jsx"],"sourcesContent":["import { useContext, useState } from \"react\";\nimport { NoteContext } from \"../../context/NoteContext\";\nimport './ToDo.css'\n\nconst ToDo = ({ id, task, complete, date, currentDate, setCurrentDate, relevance }) => {\n\n    const { setStatusTask } = useContext(NoteContext)\n    const checkTask = e => setStatusTask(id, e.target.checked)\n    const [isEditing, setIsEditing] = useState(false);\n\n    const handleUpdateDate = () => {\n        setCurrentDate(new Date());\n        setIsEditing(false);\n    }\n\n    const formattedDate = currentDate.toLocaleString('es-ES', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric',\n        second: 'numeric'\n    });\n\n    let dotColor;\n\n    switch (relevance) {\n        case '1':\n            dotColor = 'red';\n            break;\n        case '2':\n            dotColor = 'orange';\n            break;\n        case '3':\n            dotColor = 'green';\n            break;\n        default:\n            dotColor = 'black';\n    }\n\n\n\n\n\n    return (\n        <div className=\"conteiner-list\">\n            <div id=\"check-name\">\n                <input type=\"checkbox\" onChange={checkTask} />\n                <h3 className={complete ? 'task-done' : ''}>{task}</h3>\n            </div>\n\n            <div>\n                <span>{date}</span>\n                <p>Fecha de creaci√≥n: {isEditing ? (\n                    <input type=\"datetime-local\" value={currentDate.toISOString().slice(0, -8)} onChange={(e) => setCurrentDate(new Date(e.target.value))} onBlur={() => setIsEditing(false)}\n                        autoFocus />\n                ) : (\n                    <span onClick={() => setIsEditing(true)}>{formattedDate}</span>\n\n                )}</p>\n            </div>\n\n            <div\n                className=\"dot\"\n                style={{ backgroundColor: dotColor }}\n            ></div>\n        </div>\n    )\n}\n\n\nexport default ToDo"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC5C,SAASC,WAAW,QAAQ,2BAA2B;AACvD,OAAO,YAAY;AAAA;AAEnB,MAAMC,IAAI,GAAG,QAA0E;EAAA;EAAA,IAAzE;IAAEC,EAAE;IAAEC,IAAI;IAAEC,QAAQ;IAAEC,IAAI;IAAEC,WAAW;IAAEC,cAAc;IAAEC;EAAU,CAAC;EAE9E,MAAM;IAAEC;EAAc,CAAC,GAAGX,UAAU,CAACE,WAAW,CAAC;EACjD,MAAMU,SAAS,GAAGC,CAAC,IAAIF,aAAa,CAACP,EAAE,EAAES,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC;EAC1D,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMiB,gBAAgB,GAAG,MAAM;IAC3BT,cAAc,CAAC,IAAIU,IAAI,EAAE,CAAC;IAC1BF,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,MAAMG,aAAa,GAAGZ,WAAW,CAACa,cAAc,CAAC,OAAO,EAAE;IACtDC,IAAI,EAAE,SAAS;IACfC,KAAK,EAAE,MAAM;IACbC,GAAG,EAAE,SAAS;IACdC,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE,SAAS;IACjBC,MAAM,EAAE;EACZ,CAAC,CAAC;EAEF,IAAIC,QAAQ;EAEZ,QAAQlB,SAAS;IACb,KAAK,GAAG;MACJkB,QAAQ,GAAG,KAAK;MAChB;IACJ,KAAK,GAAG;MACJA,QAAQ,GAAG,QAAQ;MACnB;IACJ,KAAK,GAAG;MACJA,QAAQ,GAAG,OAAO;MAClB;IACJ;MACIA,QAAQ,GAAG,OAAO;EAAC;EAO3B,oBACI;IAAK,SAAS,EAAC,gBAAgB;IAAA,wBAC3B;MAAK,EAAE,EAAC,YAAY;MAAA,wBAChB;QAAO,IAAI,EAAC,UAAU;QAAC,QAAQ,EAAEhB;MAAU;QAAA;QAAA;QAAA;MAAA,QAAG,eAC9C;QAAI,SAAS,EAAEN,QAAQ,GAAG,WAAW,GAAG,EAAG;QAAA,UAAED;MAAI;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QACrD,eAEN;MAAA,wBACI;QAAA,UAAOE;MAAI;QAAA;QAAA;QAAA;MAAA,QAAQ,eACnB;QAAA,WAAG,wBAAmB,EAACS,SAAS,gBAC5B;UAAO,IAAI,EAAC,gBAAgB;UAAC,KAAK,EAAER,WAAW,CAACqB,WAAW,EAAE,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAE;UAAC,QAAQ,EAAGjB,CAAC,IAAKJ,cAAc,CAAC,IAAIU,IAAI,CAACN,CAAC,CAACC,MAAM,CAACiB,KAAK,CAAC,CAAE;UAAC,MAAM,EAAE,MAAMd,YAAY,CAAC,KAAK,CAAE;UACrK,SAAS;QAAA;UAAA;UAAA;UAAA;QAAA,QAAG,gBAEhB;UAAM,OAAO,EAAE,MAAMA,YAAY,CAAC,IAAI,CAAE;UAAA,UAAEG;QAAa;UAAA;UAAA;UAAA;QAAA,QAE1D;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ,eAEN;MACI,SAAS,EAAC,KAAK;MACf,KAAK,EAAE;QAAEY,eAAe,EAAEJ;MAAS;IAAE;MAAA;MAAA;MAAA;IAAA,QAClC;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEd,CAAC;AAAA,GAhEKzB,IAAI;AAAA,KAAJA,IAAI;AAmEV,eAAeA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}