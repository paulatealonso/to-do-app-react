{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/GAMMA TECH/to-do-app-react/src/components/Form/Form.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from \"react\";\nimport { NoteContext } from \"../../context/NoteContext\";\nimport './Form.css';\nimport titleImg from '../assets/black-todo.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const [task, setTask] = useState('');\n  const [date, setDate] = useState('');\n  const [tag, setTag] = useState('');\n  const {\n    addTask,\n    message,\n    setMessage\n  } = useContext(NoteContext);\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [relevance, setRelevance] = useState('');\n  const [sortDirection, setSortDirection] = useState('asc');\n  const submitNote = e => {\n    e.preventDefault();\n    addTask(task, date, currentDate, relevance, tag);\n    setTask('');\n    setTag('');\n    setDate('');\n    setCurrentDate('');\n    setRelevance('');\n  };\n  const handleSort = () => {\n    const newSortDirection = sortDirection === 'asc' ? 'desc' : 'asc';\n    setSortDirection(newSortDirection);\n    setMessage(sortNotes(message, newSortDirection));\n  };\n  const sortNotes = (notes, direction) => {\n    return [...notes].sort((a, b) => {\n      const aDate = new Date(a.date).getTime();\n      const bDate = new Date(b.date).getTime();\n      const compareResult = aDate - bDate;\n      return direction === 'asc' ? compareResult : -compareResult;\n    });\n  };\n  const sortedNotes = sortNotes(message, sortDirection);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"conteier-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"img-header\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: titleImg,\n        alt: \"title-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitNote,\n      id: \"form-note\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"input-note\",\n        value: task,\n        placeholder: \"Type something here....\",\n        onChange: e => setTask(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-input\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-input\",\n        type: \"button\",\n        onClick: handleSort,\n        children: [\"Sort by date \", sortDirection === 'asc' ? 'ascendente' : 'descendente']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"box-conteiners-form\",\n        children: [task && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"conteiner-tag\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: tag,\n            placeholder: \"Add a Tag\",\n            onChange: e => setTag(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this), task && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"conteiner-relevance\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Priority:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: relevance,\n            onChange: e => setRelevance(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1\",\n              children: \"Low\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"2\",\n              children: \"Medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"3\",\n              children: \"High\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this), task && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Date to complete:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: date,\n            onChange: e => setDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), sortedNotes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: note.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: note.task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this), note.tag && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Etiqueta: \", note.tag]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 34\n      }, this)]\n    }, note.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(Form, \"ikD8i0hYppe6XycNNunUd/MuGP4=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useContext","useState","NoteContext","titleImg","Form","task","setTask","date","setDate","tag","setTag","addTask","message","setMessage","currentDate","setCurrentDate","Date","relevance","setRelevance","sortDirection","setSortDirection","submitNote","e","preventDefault","handleSort","newSortDirection","sortNotes","notes","direction","sort","a","b","aDate","getTime","bDate","compareResult","sortedNotes","target","value","map","note","id"],"sources":["/Users/user/Desktop/GAMMA TECH/to-do-app-react/src/components/Form/Form.jsx"],"sourcesContent":["import { useContext, useState } from \"react\";\nimport { NoteContext } from \"../../context/NoteContext\";\nimport './Form.css'\nimport titleImg from '../assets/black-todo.jpeg'\n\n\nconst Form = () => {\n    const [task, setTask] = useState('')\n    const [date, setDate] = useState('')\n    const [tag, setTag] = useState('')\n    const { addTask, message, setMessage } = useContext(NoteContext)\n    const [currentDate, setCurrentDate] = useState(new Date())\n    const [relevance, setRelevance] = useState('')\n    const [sortDirection, setSortDirection] = useState('asc')\n\n    const submitNote = (e) => {\n        e.preventDefault()\n        addTask(task, date, currentDate, relevance, tag)\n        setTask('')\n        setTag('')\n        setDate('')\n        setCurrentDate('')\n        setRelevance('')\n    }\n\n    const handleSort = () => {\n        const newSortDirection = sortDirection === 'asc' ? 'desc' : 'asc';\n        setSortDirection(newSortDirection);\n        setMessage(sortNotes(message, newSortDirection));\n    }\n\n    const sortNotes = (notes, direction) => {\n        return [...notes].sort((a, b) => {\n            const aDate = new Date(a.date).getTime();\n            const bDate = new Date(b.date).getTime();\n            const compareResult = aDate - bDate;\n            return direction === 'asc' ? compareResult : -compareResult;\n        });\n    }\n\n    const sortedNotes = sortNotes(message, sortDirection);\n\n\n    return (\n        <div id=\"conteier-form\">\n\n            <div id=\"img-header\">\n                <img src={titleImg} alt='title-img' />\n            </div>\n\n            <form onSubmit={submitNote} id='form-note'>\n                <input\n                    type=\"text\"\n                    className=\"input-note\"\n                    value={task}\n                    placeholder=\"Type something here....\"\n                    onChange={e => setTask(e.target.value)}\n                    required />\n\n                <button className=\"btn-input\">Add</button>\n\n                <button className=\"btn-input\" type=\"button\" onClick={handleSort}>\n                    Sort by date {sortDirection === 'asc' ? 'ascendente' : 'descendente'}\n                </button>\n\n                <div id=\"box-conteiners-form\">\n\n                    {task && (\n                        <div className=\"conteiner-tag\">\n                            <input type=\"text\" value={tag} placeholder=\"Add a Tag\" onChange={e => setTag(e.target.value)} />\n                        </div>\n                    )}\n\n                    {task && (\n                        <div className=\"conteiner-relevance\">\n                            <label>Priority:</label>\n                            <select value={relevance} onChange={e => setRelevance(e.target.value)}>\n                                <option value=\"1\">Low</option>\n                                <option value=\"2\">Medium</option>\n                                <option value=\"3\">High</option>\n                            </select>\n                        </div>\n                    )}\n\n                    {task && (\n                        <div>\n                            <label>Date to complete:</label>\n                            <input type=\"date\" value={date} onChange={e => setDate(e.target.value)} />\n                        </div>\n                    )}\n                </div>\n\n\n\n\n            </form>\n            {sortedNotes.map(note => (\n                <div key={note.id}>\n                    <span>{note.date}</span>\n                    <p>{note.task}</p>\n                    {note.tag && <p>Etiqueta: {note.tag}</p>}\n                </div>\n            ))}\n        </div>\n    )\n}\n\n\n\nexport default Form"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC5C,SAASC,WAAW,QAAQ,2BAA2B;AACvD,OAAO,YAAY;AACnB,OAAOC,QAAQ,MAAM,2BAA2B;AAAA;AAGhD,MAAMC,IAAI,GAAG,MAAM;EAAA;EACf,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,GAAG,EAAEC,MAAM,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM;IAAEU,OAAO;IAAEC,OAAO;IAAEC;EAAW,CAAC,GAAGb,UAAU,CAACE,WAAW,CAAC;EAChE,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,IAAIe,IAAI,EAAE,CAAC;EAC1D,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACkB,aAAa,EAAEC,gBAAgB,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAEzD,MAAMoB,UAAU,GAAIC,CAAC,IAAK;IACtBA,CAAC,CAACC,cAAc,EAAE;IAClBZ,OAAO,CAACN,IAAI,EAAEE,IAAI,EAAEO,WAAW,EAAEG,SAAS,EAAER,GAAG,CAAC;IAChDH,OAAO,CAAC,EAAE,CAAC;IACXI,MAAM,CAAC,EAAE,CAAC;IACVF,OAAO,CAAC,EAAE,CAAC;IACXO,cAAc,CAAC,EAAE,CAAC;IAClBG,YAAY,CAAC,EAAE,CAAC;EACpB,CAAC;EAED,MAAMM,UAAU,GAAG,MAAM;IACrB,MAAMC,gBAAgB,GAAGN,aAAa,KAAK,KAAK,GAAG,MAAM,GAAG,KAAK;IACjEC,gBAAgB,CAACK,gBAAgB,CAAC;IAClCZ,UAAU,CAACa,SAAS,CAACd,OAAO,EAAEa,gBAAgB,CAAC,CAAC;EACpD,CAAC;EAED,MAAMC,SAAS,GAAG,CAACC,KAAK,EAAEC,SAAS,KAAK;IACpC,OAAO,CAAC,GAAGD,KAAK,CAAC,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MAC7B,MAAMC,KAAK,GAAG,IAAIhB,IAAI,CAACc,CAAC,CAACvB,IAAI,CAAC,CAAC0B,OAAO,EAAE;MACxC,MAAMC,KAAK,GAAG,IAAIlB,IAAI,CAACe,CAAC,CAACxB,IAAI,CAAC,CAAC0B,OAAO,EAAE;MACxC,MAAME,aAAa,GAAGH,KAAK,GAAGE,KAAK;MACnC,OAAON,SAAS,KAAK,KAAK,GAAGO,aAAa,GAAG,CAACA,aAAa;IAC/D,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,WAAW,GAAGV,SAAS,CAACd,OAAO,EAAEO,aAAa,CAAC;EAGrD,oBACI;IAAK,EAAE,EAAC,eAAe;IAAA,wBAEnB;MAAK,EAAE,EAAC,YAAY;MAAA,uBAChB;QAAK,GAAG,EAAEhB,QAAS;QAAC,GAAG,EAAC;MAAW;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACpC,eAEN;MAAM,QAAQ,EAAEkB,UAAW;MAAC,EAAE,EAAC,WAAW;MAAA,wBACtC;QACI,IAAI,EAAC,MAAM;QACX,SAAS,EAAC,YAAY;QACtB,KAAK,EAAEhB,IAAK;QACZ,WAAW,EAAC,yBAAyB;QACrC,QAAQ,EAAEiB,CAAC,IAAIhB,OAAO,CAACgB,CAAC,CAACe,MAAM,CAACC,KAAK,CAAE;QACvC,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QAAG,eAEf;QAAQ,SAAS,EAAC,WAAW;QAAA,UAAC;MAAG;QAAA;QAAA;QAAA;MAAA,QAAS,eAE1C;QAAQ,SAAS,EAAC,WAAW;QAAC,IAAI,EAAC,QAAQ;QAAC,OAAO,EAAEd,UAAW;QAAA,WAAC,eAChD,EAACL,aAAa,KAAK,KAAK,GAAG,YAAY,GAAG,aAAa;MAAA;QAAA;QAAA;QAAA;MAAA,QAC/D,eAET;QAAK,EAAE,EAAC,qBAAqB;QAAA,WAExBd,IAAI,iBACD;UAAK,SAAS,EAAC,eAAe;UAAA,uBAC1B;YAAO,IAAI,EAAC,MAAM;YAAC,KAAK,EAAEI,GAAI;YAAC,WAAW,EAAC,WAAW;YAAC,QAAQ,EAAEa,CAAC,IAAIZ,MAAM,CAACY,CAAC,CAACe,MAAM,CAACC,KAAK;UAAE;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA,QAEvG,EAEAjC,IAAI,iBACD;UAAK,SAAS,EAAC,qBAAqB;UAAA,wBAChC;YAAA,UAAO;UAAS;YAAA;YAAA;YAAA;UAAA,QAAQ,eACxB;YAAQ,KAAK,EAAEY,SAAU;YAAC,QAAQ,EAAEK,CAAC,IAAIJ,YAAY,CAACI,CAAC,CAACe,MAAM,CAACC,KAAK,CAAE;YAAA,wBAClE;cAAQ,KAAK,EAAC,GAAG;cAAA,UAAC;YAAG;cAAA;cAAA;cAAA;YAAA,QAAS,eAC9B;cAAQ,KAAK,EAAC,GAAG;cAAA,UAAC;YAAM;cAAA;cAAA;cAAA;YAAA,QAAS,eACjC;cAAQ,KAAK,EAAC,GAAG;cAAA,UAAC;YAAI;cAAA;cAAA;cAAA;YAAA,QAAS;UAAA;YAAA;YAAA;YAAA;UAAA,QAC1B;QAAA;UAAA;UAAA;UAAA;QAAA,QAEhB,EAEAjC,IAAI,iBACD;UAAA,wBACI;YAAA,UAAO;UAAiB;YAAA;YAAA;YAAA;UAAA,QAAQ,eAChC;YAAO,IAAI,EAAC,MAAM;YAAC,KAAK,EAAEE,IAAK;YAAC,QAAQ,EAAEe,CAAC,IAAId,OAAO,CAACc,CAAC,CAACe,MAAM,CAACC,KAAK;UAAE;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA;UAAA;UAAA;UAAA;QAAA,QAEjF;MAAA;QAAA;QAAA;QAAA;MAAA,QACC;IAAA;MAAA;MAAA;MAAA;IAAA,QAKH,EACNF,WAAW,CAACG,GAAG,CAACC,IAAI,iBACjB;MAAA,wBACI;QAAA,UAAOA,IAAI,CAACjC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAQ,eACxB;QAAA,UAAIiC,IAAI,CAACnC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAK,EACjBmC,IAAI,CAAC/B,GAAG,iBAAI;QAAA,WAAG,YAAU,EAAC+B,IAAI,CAAC/B,GAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA,GAHlC+B,IAAI,CAACC,EAAE;MAAA;MAAA;MAAA;IAAA,QAKpB,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEd,CAAC;AAAA,GAnGKrC,IAAI;AAAA,KAAJA,IAAI;AAuGV,eAAeA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}